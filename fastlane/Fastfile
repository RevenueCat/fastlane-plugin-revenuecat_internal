lane :sample_bump_version_update_changelog_create_pr_action do |options|
  bump_version_update_changelog_create_pr(
    current_version: 'current_version_number',
    changelog_latest_path: './path-to/CHANGELOG.latest.md',
    changelog_path: './path-to/CHANGELOG.md',
    files_to_update: ['./file-containing-version-1.txt', './file-containing-version-2.rb'],
    files_to_update_without_prerelease_modifiers: [],
    repo_name: 'repo-name',
    github_pr_token: 'github-api-token', # This can also be obtained from ENV GITHUB_PULL_REQUEST_API_TOKEN
    github_token: 'github-token',
    github_rate_limit: 0,
    branch: 'main',
    editor: 'vim'
  )
end

lane :sample_replace_version_number_action do |options|
  replace_version_number(
    current_version: 'current_version_number',
    new_version_number: 'new_version_number',
    files_to_update: ['./file-containing-version-1.txt', './file-containing-version-2.rb'],
    files_to_update_without_prerelease_modifiers: []
  )
end

lane :sample_create_next_snapshot_version_action do |options|
  create_next_snapshot_version(
    current_version: 'current_version_number',
    repo_name: 'repo-name',
    github_pr_token: 'github-api-token', # This can also be obtained from ENV GITHUB_PULL_REQUEST_API_TOKEN
    files_to_update: ['./file-containing-version-1.txt', './file-containing-version-2.rb'],
    files_to_update_without_prerelease_modifiers: [],
    branch: 'main'
  )
end

lane :sample_create_github_release_action do |options|
  create_github_release(
    version: 'release_version_number',
    repo_name: 'repo-name',
    github_api_token: 'github-api-token', # This can also be obtained from ENV RC_INTERNAL_GITHUB_TOKEN
    changelog_latest_path: './path-to/CHANGELOG.latest.md',
    upload_assets: ['./file-to-upload.txt', './file-to-upload-2.rb']
  )
end

lane :sample_replace_text_in_files_action do |options|
  replace_text_in_files(
    previous_text: 'previous text',
    new_text: 'new text',
    paths_of_files_to_update: ['./test-file1.txt', './test-file2.rb']
  )
end
